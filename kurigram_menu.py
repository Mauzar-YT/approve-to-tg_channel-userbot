import asyncio
import os
from pyrogram import Client
from pyrogram.errors import FloodWait, SessionPasswordNeeded, PhoneCodeInvalid
import time

class KurigramMenu:
    def __init__(self):
        self.api_id = None
        self.api_hash = None
        self.session_name = None
        self.client = None
        
    async def get_credentials(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        print("=== Kurigram Menu ===")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ config.py
        if os.path.exists('config.py'):
            try:
                from config import API_ID, API_HASH
                self.api_id = API_ID
                self.api_hash = API_HASH
                print(f"‚úì –ù–∞–π–¥–µ–Ω—ã —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ config.py")
            except ImportError:
                print("‚ö† config.py –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç API_ID –∏ API_HASH")
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        if not self.api_id:
            self.api_id = input("–í–≤–µ–¥–∏—Ç–µ API_ID: ").strip()
        if not self.api_hash:
            self.api_hash = input("–í–≤–µ–¥–∏—Ç–µ API_HASH: ").strip()
            
        self.session_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ Pyrogram (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è): ").strip()
        
    def show_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        print("\n" + "="*50)
        print("üéØ KURIGRAM MENU")
        print("="*50)
        print("1. üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Å—Å–∏—é")
        print("2. üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞")
        print("3. üë• –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤")
        print("4. üì± –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ")
        print("5. üîÑ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é")
        print("6. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é")
        print("7. üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Å—Å–∏–π")
        print("8. ‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
        print("9. üîÑ –û–¥–æ–±—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –ø–æ –æ–¥–Ω–æ–º—É")
        print("0. ‚ùå –í—ã—Ö–æ–¥")
        print("="*50)
        
    async def check_session(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏ Pyrogram"""
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é {self.session_name}...")
        
        try:
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Pyrogram
            self.client = Client(
                name=self.session_name, 
                api_id=int(self.api_id), 
                api_hash=self.api_hash, 
                system_version="4.17.30-vxCUSTOM"
            )
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
            await self.client.start()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            me = await self.client.get_me()
            
            print("‚úÖ –°–µ—Å—Å–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞!")
            print(f"üë§ –ò–º—è: {me.first_name}")
            print(f"üìù –§–∞–º–∏–ª–∏—è: {me.last_name or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}")
            print(f"üîó Username: @{me.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"üÜî ID: {me.id}")
            print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone_number or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: {'–î–∞' if me.is_verified else '–ù–µ—Ç'}")
            print(f"ü§ñ –ë–æ—Ç: {'–î–∞' if me.is_bot else '–ù–µ—Ç'}")
            
            await self.client.stop()
            return True
                
        except Exception as e:
            error_msg = str(e)
            if "msg_id is too high" in error_msg or "time has to be synchronized" in error_msg:
                print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
                print("   1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ")
                print("   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç")
                print("   3. –ü–æ–¥–æ–∂–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞")
            elif "session" in error_msg.lower() and "not found" in error_msg.lower():
                print("‚ùå –§–∞–π–ª —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏.")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Å—Å–∏–∏: {e}")
            return False
            
    async def get_account_stats(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞"""
        print(f"\nüìä –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞...")
        
        try:
            self.client = Client(
                name=self.session_name, 
                api_id=int(self.api_id), 
                api_hash=self.api_hash, 
                system_version="4.17.30-vxCUSTOM"
            )
            
            await self.client.start()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            me = await self.client.get_me()
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∏–∞–ª–æ–≥–∏
            dialogs = []
            async for dialog in self.client.get_dialogs():
                dialogs.append(dialog)
                
            print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞:")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} {me.last_name or ''}")
            print(f"üÜî ID: {me.id}")
            print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone_number or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"üí¨ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–æ–≤: {len(dialogs)}")
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–∏–ø—ã —á–∞—Ç–æ–≤
            users = sum(1 for d in dialogs if d.chat.type.value == "private")
            groups = sum(1 for d in dialogs if d.chat.type.value == "group")
            channels = sum(1 for d in dialogs if d.chat.type.value == "channel")
            
            print(f"üë• –ß–∞—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏: {users}")
            print(f"üë• –ì—Ä—É–ø–ø—ã: {groups}")
            print(f"üì¢ –ö–∞–Ω–∞–ª—ã: {channels}")
            
            await self.client.stop()
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            return False
            
    async def get_dialogs_list(self):
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤"""
        print(f"\nüë• –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤...")
        
        try:
            self.client = Client(
                name=self.session_name, 
                api_id=int(self.api_id), 
                api_hash=self.api_hash, 
                system_version="4.17.30-vxCUSTOM"
            )
            
            await self.client.start()
            
            print("üìã –°–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤:")
            print("-" * 60)
            
            count = 0
            async for dialog in self.client.get_dialogs():
                count += 1
                chat = dialog.chat
                chat_type = chat.type.value
                
                if chat_type == "private":
                    name = f"{chat.first_name} {chat.last_name or ''}".strip()
                    username = f"@{chat.username}" if chat.username else "–ù–µ—Ç username"
                    print(f"{count:2d}. üë§ {name} ({username}) - ID: {chat.id}")
                elif chat_type == "group":
                    print(f"{count:2d}. üë• {chat.title} - ID: {chat.id}")
                elif chat_type == "channel":
                    print(f"{count:2d}. üì¢ {chat.title} - ID: {chat.id}")
                elif chat_type == "bot":
                    print(f"{count:2d}. ü§ñ {chat.first_name} - ID: {chat.id}")
                    
                if count >= 50:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã–≤–æ–¥
                    print("... (–ø–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 50 –¥–∏–∞–ª–æ–≥–æ–≤)")
                    break
                    
            await self.client.stop()
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤: {e}")
            return False
            
    async def get_chat_info(self):
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —á–∞—Ç–µ"""
        chat_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID —á–∞—Ç–∞ –∏–ª–∏ username (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789 –∏–ª–∏ @username): ").strip()
        
        if not chat_id:
            print("‚ùå ID —á–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω")
            return False
            
        print(f"\nüì± –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ {chat_id}...")
        
        try:
            self.client = Client(
                name=self.session_name, 
                api_id=int(self.api_id), 
                api_hash=self.api_hash, 
                system_version="4.17.30-vxCUSTOM"
            )
            
            await self.client.start()
            
            # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —á–∞—Ç
            try:
                chat = await self.client.get_chat(chat_id)
            except:
                print("‚ùå –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
                await self.client.stop()
                return False
                
            print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:")
            print(f"üÜî ID: {chat.id}")
            print(f"üìù –¢–∏–ø: {chat.type.value}")
            
            if chat.type.value == "private":
                print(f"üë§ –ò–º—è: {chat.first_name}")
                print(f"üìù –§–∞–º–∏–ª–∏—è: {chat.last_name or '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}")
                print(f"üîó Username: @{chat.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {chat.phone_number or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: {'–î–∞' if chat.is_verified else '–ù–µ—Ç'}")
                print(f"ü§ñ –ë–æ—Ç: {'–î–∞' if chat.is_bot else '–ù–µ—Ç'}")
            elif chat.type.value in ["group", "supergroup"]:
                print(f"üë• –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}")
                print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {chat.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
                print(f"üîó Username: @{chat.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                print(f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {chat.members_count or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
            elif chat.type.value == "channel":
                print(f"üì¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}")
                print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {chat.description or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
                print(f"üîó Username: @{chat.username or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                print(f"üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {chat.members_count or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}")
                
            await self.client.stop()
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ: {e}")
            return False
            
    async def create_new_session(self):
        """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é"""
        print("\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏...")
        
        phone = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: +79001234567): ").strip()
        
        if not phone:
            print("‚ùå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω")
            return False
            
        session_name = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏: ").strip()
        
        if not session_name:
            print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")
            return False
            
        try:
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç
            client = Client(
                name=session_name,
                api_id=int(self.api_id),
                api_hash=self.api_hash,
                system_version="4.17.30-vxCUSTOM"
            )
            
            print("üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è...")
            await client.connect()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥
            sent_code = await client.send_code(phone)
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–¥ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ Telegram: ").strip()
            
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å –∫–æ–¥–æ–º
                await client.sign_in(phone, sent_code.phone_code_hash, code)
                print("‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
                return True
                
            except SessionPasswordNeeded:
                # –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
                password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ").strip()
                await client.check_password(password)
                print("‚úÖ –°–µ—Å—Å–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
                return True
                
            except PhoneCodeInvalid:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")
            return False
        finally:
            try:
                await client.disconnect()
            except:
                pass
                
    def delete_session(self):
        """–£–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é"""
        session_name = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ").strip()
        
        if not session_name:
            print("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ")
            return False
            
        session_file = f"{session_name}.session"
        
        if os.path.exists(session_file):
            try:
                os.remove(session_file)
                print(f"‚úÖ –°–µ—Å—Å–∏—è {session_name} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
                return True
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")
                return False
        else:
            print(f"‚ùå –§–∞–π–ª —Å–µ—Å—Å–∏–∏ {session_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    def list_sessions(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Å—Å–∏–π"""
        print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Å—Å–∏–∏:")
        print("-" * 40)
        
        sessions_found = False
        for file in os.listdir("."):
            if file.endswith(".session"):
                sessions_found = True
                session_name = file.replace(".session", "")
                file_size = os.path.getsize(file)
                print(f"üìÅ {session_name} ({file_size} –±–∞–π—Ç)")
                
        if not sessions_found:
            print("‚ùå –°–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        return sessions_found

    async def approve_all_join_requests(self):
        """–û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª"""
        print(f"\n‚úÖ –û–¥–æ–±—Ä–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ...")
        
        try:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            channel_id = input("–í–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ username (–Ω–∞–ø—Ä–∏–º–µ—Ä: -1001234567890 –∏–ª–∏ @username): ").strip()
            if not channel_id:
                print("‚ùå ID –∫–∞–Ω–∞–ª–∞ –Ω–µ —É–∫–∞–∑–∞–Ω")
                return False
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
            self.client = Client(
                name=self.session_name, 
                api_id=int(self.api_id), 
                api_hash=self.api_hash, 
                system_version="4.17.30-vxCUSTOM"
            )
            
            await self.client.start()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            try:
                chat_member = await self.client.get_chat_member(channel_id, "me")
                if chat_member.status.value not in ["creator", "administrator"]:
                    print("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ")
                    await self.client.stop()
                    return False
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤: {e}")
                await self.client.stop()
                return False
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
            try:
                join_requests = []
                async for request in self.client.get_chat_join_requests(channel_id):
                    join_requests.append(request)
                
                request_count = len(join_requests)
                
                if request_count == 0:
                    print("‚úÖ –ó–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–µ—Ç")
                    await self.client.stop()
                    return True
                    
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ {request_count} –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–∞—Ö
                print("\nüìù –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤:")
                print("-" * 50)
                for i, request in enumerate(join_requests[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                    # –í Pyrogram –æ–±—ä–µ–∫—Ç ChatJoiner –∏–º–µ–µ—Ç –∞—Ç—Ä–∏–±—É—Ç user, –∞ –Ω–µ from_user
                    user = request.user
                    name = f"{user.first_name} {user.last_name or ''}".strip()
                    username = f"@{user.username}" if user.username else "–ù–µ—Ç username"
                    print(f"{i:2d}. üë§ {name} ({username}) - ID: {user.id}")
                
                if request_count > 10:
                    print(f"... –∏ –µ—â–µ {request_count - 10} –∑–∞–ø—Ä–æ—Å–æ–≤")
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                confirm = input(f"\n–û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ {request_count} –∑–∞–ø—Ä–æ—Å–æ–≤? (y/N): ").strip().lower()
                if confirm not in ['y', 'yes', '–¥–∞', '–¥']:
                    print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                    await self.client.stop()
                    return False
                
                # –û–¥–æ–±—Ä—è–µ–º –≤—Å–µ –∑–∞–ø—Ä–æ—Å—ã
                print("üîÑ –û–¥–æ–±—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã...")
                result = await self.client.approve_all_chat_join_requests(channel_id)
                
                if result:
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–æ {request_count} –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ!")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤")
                
                await self.client.stop()
                return result
                
            except Exception as e:
                error_msg = str(e)
                if "CHAT_ADMIN_REQUIRED" in error_msg:
                    print("‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞–º–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
                elif "CHAT_WRITE_FORBIDDEN" in error_msg:
                    print("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —á–∞—Ç")
                elif "CHAT_NOT_FOUND" in error_msg:
                    print("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ: {e}")
                
                await self.client.stop()
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤: {e}")
            return False

    async def approve_join_requests_one_by_one(self):
        """–û–¥–æ–±—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ –æ–¥–Ω–æ–º—É"""
        print(f"\nüîÑ –û–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ –æ–¥–Ω–æ–º—É...")
        
        try:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            channel_id = input("–í–≤–µ–¥–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ username (–Ω–∞–ø—Ä–∏–º–µ—Ä: -1001234567890 –∏–ª–∏ @username): ").strip()
            if not channel_id:
                print("‚ùå ID –∫–∞–Ω–∞–ª–∞ –Ω–µ —É–∫–∞–∑–∞–Ω")
                return False
            
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
            self.client = Client(
                name=self.session_name, 
                api_id=int(self.api_id), 
                api_hash=self.api_hash, 
                system_version="4.17.30-vxCUSTOM"
            )
            
            await self.client.start()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            try:
                chat_member = await self.client.get_chat_member(channel_id, "me")
                if chat_member.status.value not in ["creator", "administrator"]:
                    print("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ")
                    await self.client.stop()
                    return False
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤: {e}")
                await self.client.stop()
                return False
            
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ
            try:
                join_requests = []
                async for request in self.client.get_chat_join_requests(channel_id):
                    join_requests.append(request)
                
                request_count = len(join_requests)
                
                if request_count == 0:
                    print("‚úÖ –ó–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–µ—Ç")
                    await self.client.stop()
                    return True
                    
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ {request_count} –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–∞—Ö
                print("\nüìù –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–æ—Å–æ–≤:")
                print("-" * 50)
                for i, request in enumerate(join_requests, 1):
                    user = request.user
                    name = f"{user.first_name} {user.last_name or ''}".strip()
                    username = f"@{user.username}" if user.username else "–ù–µ—Ç username"
                    print(f"{i:2d}. üë§ {name} ({username}) - ID: {user.id}")
                
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
                confirm = input(f"\n–û–¥–æ–±—Ä–∏—Ç—å –≤—Å–µ {request_count} –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –æ–¥–Ω–æ–º—É? (y/N): ").strip().lower()
                if confirm not in ['y', 'yes', '–¥–∞', '–¥']:
                    print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
                    await self.client.stop()
                    return False
                
                # –û–¥–æ–±—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø–æ –æ–¥–Ω–æ–º—É
                print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ –æ–¥–Ω–æ–º—É...")
                approved_count = 0
                failed_count = 0
                
                for i, request in enumerate(join_requests, 1):
                    user = request.user
                    name = f"{user.first_name} {user.last_name or ''}".strip()
                    username = f"@{user.username}" if user.username else "–ù–µ—Ç username"
                    
                    try:
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ approve_chat_join_request –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        result = await self.client.approve_chat_join_request(channel_id, user.id)
                        
                        if result:
                            print(f"‚úÖ {i:2d}/{request_count} –û–¥–æ–±—Ä–µ–Ω: {name} ({username}) - ID: {user.id}")
                            approved_count += 1
                        else:
                            print(f"‚ùå {i:2d}/{request_count} –û—à–∏–±–∫–∞: {name} ({username}) - ID: {user.id}")
                            failed_count += 1
                            
                    except Exception as e:
                        print(f"‚ùå {i:2d}/{request_count} –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ {name} ({username}): {e}")
                        failed_count += 1
                    
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                    await asyncio.sleep(1)
                
                # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                print(f"\nüìä –ò—Ç–æ–≥–∏:")
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–¥–æ–±—Ä–µ–Ω–æ: {approved_count}")
                print(f"‚ùå –û—à–∏–±–æ–∫: {failed_count}")
                print(f"üìã –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {request_count}")
                
                await self.client.stop()
                return True
                
            except Exception as e:
                error_msg = str(e)
                if "CHAT_ADMIN_REQUIRED" in error_msg:
                    print("‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞–º–∏ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
                elif "CHAT_WRITE_FORBIDDEN" in error_msg:
                    print("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —á–∞—Ç")
                elif "CHAT_NOT_FOUND" in error_msg:
                    print("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ: {e}")
                
                await self.client.stop()
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤: {e}")
            return False

async def main():
    menu = KurigramMenu()
    
    # –ü–æ–ª—É—á–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await menu.get_credentials()
    
    while True:
        menu.show_menu()
        
        try:
            choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-9): ").strip()
            
            if choice == "0":
                print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            elif choice == "1":
                await menu.check_session()
            elif choice == "2":
                await menu.get_account_stats()
            elif choice == "3":
                await menu.get_dialogs_list()
            elif choice == "4":
                await menu.get_chat_info()
            elif choice == "5":
                await menu.create_new_session()
            elif choice == "6":
                menu.delete_session()
            elif choice == "7":
                menu.list_sessions()
            elif choice == "8":
                await menu.approve_all_join_requests()
            elif choice == "9":
                await menu.approve_join_requests_one_by_one()
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                
        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")

if __name__ == "__main__":
    asyncio.run(main()) 